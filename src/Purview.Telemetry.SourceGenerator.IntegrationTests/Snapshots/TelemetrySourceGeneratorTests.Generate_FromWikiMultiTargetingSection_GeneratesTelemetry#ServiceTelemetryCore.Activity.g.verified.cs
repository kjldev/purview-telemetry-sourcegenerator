//HintName: ServiceTelemetryCore.Activity.g.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Purview.Telemetry.SourceGenerator
//     on {Scrubbed}.
//
//     Changes to this file may cause incorrect behaviour and will be lost
//     when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // publicly visible type or member must be documented

#nullable enable

sealed partial class ServiceTelemetryCore : global::IServiceTelemetry
{
	readonly static global::System.Diagnostics.ActivitySource _activitySource = new("multi-targeting");

	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Purview.Telemetry.SourceGenerator", "0.1.0.0")]
	[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	static void RecordExceptionInternal(global::System.Diagnostics.Activity? activity, global::System.Exception? exception, bool escape)
	{
		if (activity == null || exception == null)
		{
			return;
		}

		global::System.Diagnostics.ActivityTagsCollection tagsCollection = new();		tagsCollection.Add("exception.escaped", escape);
		tagsCollection.Add("exception.message", exception.Message);
		tagsCollection.Add("exception.type", exception.GetType().FullName);
		tagsCollection.Add("exception.stacktrace", exception.StackTrace);

		global::System.Diagnostics.ActivityEvent recordExceptionEvent = new(name: "exception", timestamp: default, tags: tagsCollection);

		activity.AddEvent(recordExceptionEvent);
	}

	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Purview.Telemetry.SourceGenerator", "0.1.0.0")]
	[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	public System.Diagnostics.Activity? StartAnActivity(int tagIntParam, string entityId)
	{
		if (!_activitySource.HasListeners())
		{
			return null;
		}

		global::System.Diagnostics.Activity? activityStartAnActivity = _activitySource.StartActivity(name: "StartAnActivity", kind: global::System.Diagnostics.ActivityKind.Internal, parentId: default, tags: default, links: default, startTime: default);

		if (activityStartAnActivity != null)
		{
			activityStartAnActivity.SetTag("tagintparam", tagIntParam);
		}

		if (activityStartAnActivity != null)
		{
			activityStartAnActivity.SetBaggage("entityid", entityId);
		}

		return activityStartAnActivity;
	}

	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Purview.Telemetry.SourceGenerator", "0.1.0.0")]
	[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	public void AnInterestingEvent(System.Diagnostics.Activity? activity, float aTagValue)
	{
		if (!_activitySource.HasListeners())
		{
			return;
		}

		if (activity != null)
		{
			global::System.Diagnostics.ActivityTagsCollection tagsCollectionAnInterestingEvent = new();
			tagsCollectionAnInterestingEvent.Add("atagvalue", aTagValue);

			global::System.Diagnostics.ActivityEvent activityEventAnInterestingEvent = new(name: "AnInterestingEvent", timestamp: default, tags: tagsCollectionAnInterestingEvent);

			activity.AddEvent(activityEventAnInterestingEvent);
		}
	}

	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Purview.Telemetry.SourceGenerator", "0.1.0.0")]
	[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	public void InterestingInfo(System.Diagnostics.Activity? activity, float anotherTagValue, int intTagValue)
	{
		if (!_activitySource.HasListeners())
		{
			return;
		}

		if (activity != null)
		{
			activity.SetTag("anothertagvalue", anotherTagValue);
			activity.SetTag("inttagvalue", intTagValue);
		}
	}

}
