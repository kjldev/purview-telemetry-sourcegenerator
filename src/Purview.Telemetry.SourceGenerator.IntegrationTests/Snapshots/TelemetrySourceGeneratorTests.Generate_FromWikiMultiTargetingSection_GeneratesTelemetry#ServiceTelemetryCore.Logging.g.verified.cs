//HintName: ServiceTelemetryCore.Logging.g.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Purview.Telemetry.SourceGenerator
//     on {Scrubbed}.
//
//     Changes to this file may cause incorrect behaviour and will be lost
//     when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // publicly visible type or member must be documented

#nullable enable

sealed partial class ServiceTelemetryCore : global::IServiceTelemetry
{
	readonly global::Microsoft.Extensions.Logging.ILogger<global::IServiceTelemetry> _logger;

	static readonly global::System.Action<global::Microsoft.Extensions.Logging.ILogger, int, string, global::System.Exception?> _processingEntityAction = global::Microsoft.Extensions.Logging.LoggerMessage.Define<int, string>(global::Microsoft.Extensions.Logging.LogLevel.Information, new global::Microsoft.Extensions.Logging.EventId(1928055243, "ProcessingEntity"), "ProcessingEntity: EntityId = {EntityId}, Property1 = {Property1}");

	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Purview.Telemetry.SourceGenerator", "0.1.0.0")]
	[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	public void ProcessingEntity(int entityId, string property1)
	{
		if (!_logger.IsEnabled(global::Microsoft.Extensions.Logging.LogLevel.Information))
		{
			return;
		}

		_processingEntityAction(_logger, entityId, property1, null);
	}

}
